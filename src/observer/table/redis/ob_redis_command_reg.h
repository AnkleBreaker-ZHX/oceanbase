/**
 * Copyright (c) 2024 OceanBase
 * OceanBase is licensed under Mulan PubL v2.
 * You can use this software according to the terms and conditions of the Mulan PubL v2.
 * You may obtain a copy of Mulan PubL v2 at:
 *          http://license.coscl.org.cn/MulanPubL-2.0
 * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
 * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
 * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
 * See the Mulan PubL v2 for more details.
 */

#pragma once

#include "share/table/redis/ob_redis_common.h"
#include "cmd/ob_redis_list_cmd.h"
#include "cmd/ob_redis_set_cmd.h"
#include "cmd/ob_redis_zset_cmd.h"
#include "cmd/ob_redis_hash_cmd.h"
#include "cmd/ob_redis_string_cmd.h"
#include "cmd/ob_redis_generic_cmd.h"

namespace oceanbase
{
namespace table
{
template <int>
struct ObRedisCommandTypeTraits {
  constexpr static bool registered_ = false;
  constexpr static const char *cmd_name_ = nullptr;
  constexpr static bool is_support_group_ = false;
  typedef char RedisCommand;
};

template <typename T>
struct ObRedisCommandTraits {
  constexpr static int type_ = 0;
};

#define REGISTER_REDIS_COMMAND_INNER(type, command, cmd_name, support_group) \
  template<>                                                                 \
  struct ObRedisCommandTypeTraits<type>                                      \
  {                                                                          \
    constexpr static bool registered_ = true;                                \
    constexpr static const char *cmd_name_ = cmd_name;                       \
    constexpr static bool is_support_group_ = support_group;                 \
    typedef command RedisCommand;                                            \
  };                                                                         \
  template<>                                                                 \
  struct ObRedisCommandTraits<command>                                       \
  {                                                                          \
    constexpr static int type_ = type;                                       \
  };

#define REGISTER_REDIS_COMMAND(type, command, cmd_name) \
  REGISTER_REDIS_COMMAND_INNER(type, command, cmd_name, false)

// REGISTER_REDIS_COMMAND(method_type, command)
// regeister command here, cmd name need to be all capitalizedÔºÅ
// Set
REGISTER_REDIS_COMMAND(REDIS_COMMAND_SDIFF, SDiff, "SDIFF");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_SINTER, SInter, "SINTER");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_SUNION, SUnion, "SUNION");
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_SADD, SAdd, "SADD", true);
REGISTER_REDIS_COMMAND(REDIS_COMMAND_SDIFFSTORE, SDiffStore, "SDIFFSTORE");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_SINTERSTORE, SInterStore, "SINTERSTORE");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_SUNIONSTORE, SUnionStore, "SUNIONSTORE");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_SCARD, SCard, "SCARD");
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_SISMEMBER, SIsMember, "SISMEMBER", true);
REGISTER_REDIS_COMMAND(REDIS_COMMAND_SMEMBERS, SMembers, "SMEMBERS");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_SMOVE, SMove, "SMOVE");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_SPOP, SPop, "SPOP");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_SRANDMEMBER, SRandMember, "SRANDMEMBER");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_SREM, SRem, "SREM");

// ZSet
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_ZADD, ZAdd, "ZADD", true);
REGISTER_REDIS_COMMAND(REDIS_COMMAND_ZCARD, ZCard, "ZCARD");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_ZREM, ZRem, "ZREM");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_ZINCRBY, ZIncrBy, "ZINCRBY");
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_ZSCORE, ZScore, "ZSCORE", true);
REGISTER_REDIS_COMMAND(REDIS_COMMAND_ZRANK, ZRank, "ZRANK");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_ZREVRANK, ZRevRank, "ZREVRANK");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_ZRANGE, ZRange, "ZRANGE");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_ZREVRANGE, ZRevRange, "ZREVRANGE");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_ZCOUNT, ZCount, "ZCOUNT");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_ZREMRANGEBYRANK, ZRemRangeByRank, "ZREMRANGEBYRANK");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_ZRANGEBYSCORE, ZRangeByScore, "ZRANGEBYSCORE");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_ZREVRANGEBYSCORE, ZRevRangeByScore, "ZREVRANGEBYSCORE");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_ZREMRANGEBYSCORE, ZRemRangeByScore, "ZREMRANGEBYSCORE");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_ZINTERSTORE, ZInterStore, "ZINTERSTORE");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_ZUNIONSTORE, ZUnionStore, "ZUNIONSTORE");

// Hash
// REGISTER_REDIS_COMMAND(REDIS_COMMAND_HSET, HSet, "HSET");
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_HSET, HSet, "HSET", true);
REGISTER_REDIS_COMMAND(REDIS_COMMAND_HMSET, HMSet, "HMSET");
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_HSETNX, HSetNX, "HSETNX", true);
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_HGET, HGet, "HGET", true);
REGISTER_REDIS_COMMAND(REDIS_COMMAND_HMGET, HMGet, "HMGET");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_HLEN, HLen, "HLEN");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_HGETALL, HGetAll, "HGETALL");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_HKEYS, HKeys, "HKEYS");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_HVALS, HVals, "HVALS");
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_HEXISTS, HExists, "HEXISTS", true);
REGISTER_REDIS_COMMAND(REDIS_COMMAND_HDEL, HDel, "HDEL");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_HINCRBY, HIncrBy, "HINCRBY");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_HINCRBYFLOAT, HIncrByFloat, "HINCRBYFLOAT");

// List
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_LPUSH, LPush, "LPUSH", true);
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_LPUSHX, LPushX, "LPUSHX", true);
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_RPUSH, RPush, "RPUSH", true);
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_RPUSHX, RPushX, "RPUSHX", true);
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_LPOP, LPop, "LPOP", true);
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_RPOP, RPop, "RPOP", true);
REGISTER_REDIS_COMMAND(REDIS_COMMAND_LINDEX, LIndex, "LINDEX");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_LSET, LSet, "LSET");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_LRANGE, LRange, "LRANGE");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_LTRIM, LTrim, "LTRIM");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_LINSERT, LInsert, "LINSERT");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_LLEN, LLen, "LLEN");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_LREM, LRem, "LREM");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_RPOPLPUSH, RpopLpush, "RPOPLPUSH");

// String
REGISTER_REDIS_COMMAND(REDIS_COMMAND_GETSET, GetSet, "GETSET");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_SETBIT, SetBit, "SETBIT");
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_INCR, Incr, "INCR", true);
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_INCRBY, IncrBy, "INCRBY", true);
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_DECR, Decr, "DECR", true);
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_DECRBY, DecrBy, "DECRBY", true);
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_APPEND, Append, "APPEND", true);
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_BITCOUNT, BitCount, "BITCOUNT", true);
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_GET, Get, "GET", true);
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_GETBIT, GetBit, "GETBIT", true);
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_GETRANGE, GetRange, "GETRANGE", true);
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_INCRBYFLOAT, IncrByFloat, "INCRBYFLOAT", true);
REGISTER_REDIS_COMMAND(REDIS_COMMAND_MGET, MGet, "MGET");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_MSET, MSet, "MSET");
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_SET, Set, "SET", true);
REGISTER_REDIS_COMMAND(REDIS_COMMAND_PSETEX, PSetEx, "PSETEX");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_SETEX, SetEx, "SETEX");
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_SETNX, SetNx, "SETNX", true);
REGISTER_REDIS_COMMAND(REDIS_COMMAND_SETRANGE, SetRange, "SETRANGE");
REGISTER_REDIS_COMMAND_INNER(REDIS_COMMAND_STRLEN, StrLen, "STRLEN", true);

// Generic
REGISTER_REDIS_COMMAND(REDIS_COMMAND_PEXPIREAT, ObRedisPExpireAt, "PEXPIREAT");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_EXPIREAT, ObRedisExpireAt, "EXPIREAT");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_PEXPIRE, ObRedisPExpire, "PEXPIRE");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_EXPIRE, ObRedisExpire, "EXPIRE");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_PTTL, ObRedisPTTL, "PTTL");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_TTL, ObRedisTTL, "TTL");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_EXISTS, ObRedisExists, "EXISTS");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_TYPE, ObRedisType, "TYPE");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_PERSIST, ObRedisPersist, "PERSIST");
REGISTER_REDIS_COMMAND(REDIS_COMMAND_DEL, ObRedisDel, "DEL");
#undef REGISTER_REDIS_COMMAND

}  // end namespace table
}  // end namespace oceanbase
